#include "hwlib.hpp"
#include "rtos.hpp"

class transfer_hit_control : public rtos::task<>{
    enum state_t {IDLE, read_write};
private:
    state_t state = IDLE;

    hit_control & h_control;
    USB_poort & poort;

    rtos::flag requestFlag;

    int countDown;
    int gameTime;

    void main(){
        for(;;){
            switch(state){
                case IDLE:
                    wait(requestFlag);
                    state = read_write;
                    break;
                case read_write:
                    hit_data = h_control.get_hits()
            }
        }
    }

public:
    void write_request()(){
        requestFlag.set();
    }

    void pull_hits(int hit_data){
        hitsChannel.write(hit_data)
    }


    transfer_hit_control( hit_control & h_control):
            rtos::task(1, "hit_control"),
            hit_control(hit_control);
            hit_control(this, "gameoverFlag"),

    {}
};
